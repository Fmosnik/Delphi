unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, Grids, Math, DateUtils ;

type
  TForm1 = class(TForm)
    btn1: TButton;
    btn4: TButton;
    btn5: TButton;
    StringGrid1: TStringGrid;
    lbl1: TLabel;
    lbl2: TLabel;
    lbl3: TLabel;
    edt1: TEdit;
    rg1: TRadioGroup;
    StringGrid2: TStringGrid;
    btn7: TButton;
    edt2: TEdit;
    lbl4: TLabel;
    Button1: TButton;
    Button2: TButton;
    Memo1: TMemo;
    procedure btn5Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    
    procedure btn1Click(Sender: TObject);
    procedure btn4Click(Sender: TObject);
    procedure btn7Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;
 const
   Nmax=300000;
   type Mas1=array[1..Nmax] of integer;
   
var
 starttime,endtime,q:integer;
  Form1: TForm1;
  var A:Mas1;
  n,i,j: integer;

implementation

{$R *.dfm}

procedure TForm1.btn5Click(Sender: TObject);
begin
close
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
Memo1.Clear;
Memo1.Lines.Add('Результаты выполнения:')  ;
 n:=5 ;
 edt1.Text:=FloatToStr(n) ;
  StringGrid1.ColCount:=n+1;
  StringGrid2.ColCount:=n+1;
  RG1.ItemIndex:=0;
  edt2.text:='';
end;

procedure TForm1.btn1Click(Sender: TObject);

begin
  if not (tryStrToint(Edt1.text,n)) or not (n>=0)  then begin
Showmessage('Проверьте введенные данные ');
exit ;  end;
n:=StrToInt(edt1.Text);
StringGrid1.ColCount:=N+1;
StringGrid2.ColCount:=n+1;
 for i:=1 to n do
   StringGrid1.Cols[i].Clear;
   for i:=1 to n do
   StringGrid1.Cols[i].Clear;
   for i:=1 to n do
StringGrid2.Cols[i].Clear;
edt2.text:='';
end;

procedure TForm1.btn4Click(Sender: TObject);
begin
Randomize;
for i:=1 to n do
StringGrid1.Cells[i,0]:=IntToStr(RandomRange(-10,39));
for i:=1 to n do
StringGrid2.Cols[i].Clear;
end;

procedure TForm1.btn7Click(Sender: TObject);
var

min:Integer;
Sort:Boolean;
i, j, k,x,rez,r: integer;
begin
 for i:=1 to n do
StringGrid2.Cols[i].Clear;
 starttime:=GetTickCount;
 for i:=1 to n do
 if not (TryStrToInt(StringGrid1.Cells[i,0],r)) then begin
   ShowMessage('Проверьте введенные данные');
   exit; end;

   for i:=1 to n do begin
     a[i]:=StrToInt(Stringgrid1.Cells[i,0]);
   end;
Case rg1.ItemIndex of
//первый
0:for i := 1 to n-1 do 
for j := 1 to n-i do
if a[j] > a[j+1] then begin
k := a[j];
a[j]:= a[j+1];
a[j+1] := k;
end;
//второй
1:for i:=1 to n do
 begin
  min:=i;
  for j:=i+1 to n do 
  if a[j]<a[min] then
  min:=j;
  x:=a[i];
  a[i]:=a[min];
  a[min]:=x;
  end;
//третий
2:for i:=2 to n do
  begin
    j:=i;
    rez:=a[i];
    while ((j>1)and(a[j-1]>rez)) do
      begin
        a[j]:=a[j-1];
        j:=j-1;
      end;
    a[j]:=rez;
  end;
end;

for i:=1 to n do

 StringGrid2.Cells[i,0]:=FloatToStr(a[i]);

  endtime:=GetTickCount;
  q:=endtime-starttime;
  edt2.text:=FloatToStr(q);
 end;
procedure TForm1.Button1Click(Sender: TObject);
begin
for i:=1 to n do
   StringGrid1.Cols[i].Clear;
   for i:=1 to n do
   StringGrid1.Cols[i].Clear;
   for i:=1 to n do
StringGrid2.Cols[i].Clear;
end;

procedure TForm1.Button2Click(Sender: TObject);
begin
 for i:=1 to n do
StringGrid2.Cols[i].Clear;
end;

end.
